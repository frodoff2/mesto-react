{"version":3,"sources":["components/Header.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/API.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeletePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","headerLogo","alt","Card","props","isOwn","card","owner","_id","currentUser","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","onDeleteButton","cardLike","length","CurrentUserContext","React","createContext","Main","useContext","avatar","onEditAvatar","about","onEditProfile","onAddPlace","Provider","value","cards","map","key","onCardClick","Footer","ImapePopup","isOpen","onClose","api","baseUrl","headers","this","fetch","method","then","res","ok","json","Promise","reject","status","body","JSON","stringify","id","authorization","PopupWithForm","onSubmit","title","children","btnTitle","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","target","minLength","maxLength","required","defaultValue","onChange","EditAvatarPopup","counterRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","url","placeholder","DeletePopup","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeletePopupOpen","setDeletePopupOpen","selectedCard","setSelectedCard","bigPopup","setBigPopup","setCurrentUser","setCards","deleteCard","setDeleteCard","closeAllPopups","getInfo","catch","err","console","log","getInitialCards","data","editProfile","addNewCard","newCard","changeAvatar","newCards","filter","c","ImagePopup","changeLikeCardStatus","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.d8369b23.chunk.js","sourcesContent":["import React from 'react';\nimport headerLogo from '../images/logo.svg';\n\nfunction Header() {\n  return(\n    <header className=\"header\">  \n    <img src={headerLogo} className=\"header__logo\" alt=\"логотип\" />    \n    </header>  \n  );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Card(props) {\n  // увеличенная картинка\n  function handleClick() {\n    props.onClick(props.card)\n  }\n  // лайк\n  function handleLikeClick() {\n    props.cardLike(props.card)\n  }\n  // удаление карточки\n  function handleCardDelete() {\n    props.onDeleteButton(props.card)\n  }\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === props.currentUser._id;\n  const cardDeleteButtonClassName = (\n    `element__trash ${isOwn ? '' : 'element__trash_active'}`\n  );\n  // Определяем лайки\n  const isLiked = props.card.likes.some(i => i._id === props.currentUser._id);\n  const cardLikeButtonClassName = (`element__like ${isLiked ? 'element__like_active' : ''}`);\n\n  return( \n    <div className=\"element\">    \n      <img className=\"element__image\" src={props.card.link} alt={props.card.name} onClick={handleClick} />    \n      <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleCardDelete}></button>   \n      <div className=\"element__text\">   \n        <h2 className=\"element__title\">{props.card.name}</h2>   \n        <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\"></button>   \n        <div className=\"element__like_count\">{props.card.likes.length}</div>  \n      </div>   \n    </div>   \n  ); \n} \nexport default Card;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n\n","import React from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext)\n\n  return(\n    <>\n    <section className=\"profile\">  \n      <img className=\"profile__image\"  src={currentUser.avatar} name=\"avatar\" alt=\"фотография Жак-Ив Кусто\" />  \n      <div className=\"profile__pen\" onClick={props.onEditAvatar}> </div> \n      <div className=\"profile__info\">   \n        <h1 className=\"profile__title\">{currentUser.name}</h1>  \n        <p className=\"profile__subtitle\">{currentUser.about}</p>  \n      </div>  \n      <button className=\"profile__edit\" type=\"button\" onClick={props.onEditProfile}></button>  \n      <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>  \n    </section> \n    <section className=\"elements\">\n      <CurrentUserContext.Provider value={currentUser}> \n        {props.cards.map((card) =>  <Card key={card._id} card={card} onDeleteButton={props.onDeleteButton} currentUser={currentUser} onClick={props.onCardClick} cardLike={props.cardLike} />)}\n      </CurrentUserContext.Provider>\n    </section> \n\n   </>\n    );\n  }\n  \n  export default Main;","import React from 'react';\n\nfunction Footer() {\n  return(\n    <footer className=\"footer\">  \n      <p className=\"footer__text\"> &copy; 2020 Mesto Russia</p>  \n    </footer>  \n  );\n}\n\nexport default Footer;\n\n","import React from 'react';\n\nfunction ImapePopup(props) {\n  return(\n    <section className={`popup popup_opacity  ${props.isOpen ? ('popup_opened') : ('')} `} >  \n      <div className=\"popup__zoomed\">  \n        <button className=\"popup__close popup__close-zoom\" type=\"button\" onClick={props.onClose}></button>  \n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>  \n          <p className=\"popup__caption\">{props.card.name}</p>  \n      </div>  \n    </section> \n    )  \n  }\n\nexport default ImapePopup;\n\n","\n\nexport class Api {\n  constructor({ baseUrl, headers }) {\n  this.baseUrl = baseUrl;\n  this.headers = headers;\n  }\n\n  getInfo() {\n    return fetch( this.baseUrl, {  \n        method: 'GET', \n        headers: this.headers \n      })\n      .then(res => {\n        if (res.ok) {\n        return res.json();\n        }\n        // если ошибка, отклоняем промис\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getInitialCards() {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards', { \n      method: 'GET',\n      headers: this.headers   \n    })\n    .then(res => {\n      if (res.ok) {\n          return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Карточки не загружены: ${res.status}`);\n      })\n  }\n\n  editProfile(name, about) {\n    return fetch(this.baseUrl, {\n      method: 'PATCH', \n      headers: this.headers,\n      body: JSON.stringify({\n          name: name,\n          about: about\n        })\n      })\n      .then(res => {\n      if (res.ok) {\n      return res.json();\n      }\n      // если ошибка, отклоняем промис\n      return Promise.reject(`Ошибка: ${res.status}`);\n    })\n  }\n  \n  addNewCard(name, link) {\n      return fetch('https://mesto.nomoreparties.co/v1/cohort-12/cards', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: name,\n          link: link\n        }) \n      })\n      .then(res => {\n          if (res.ok) {\n          return res.json();\n          }\n          // если ошибка, отклоняем промис\n          return Promise.reject(`Ошибка: ${res.status}`);\n        })\n  }\n  \n\n  changeLikeCardStatus(id, isLiked) {\n  if (isLiked) {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers,\n      }) \n      .then(res => {\n       if (res.ok) {\n       return res.json();\n       }\n       // если ошибка, отклоняем промис\n       return Promise.reject(`Ошибка: ${res.status}`);\n     })\n  } else {\n    return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers,\n      }) \n      .then(res => {\n       if (res.ok) {\n       return res.json();\n       }\n       // если ошибка, отклоняем промис\n       return Promise.reject(`Ошибка: ${res.status}`); \n     })  \n    }}\n\n\n  deleteCard(id) {\n   return fetch(`https://mesto.nomoreparties.co/v1/cohort-12/cards/${id}`, {\n     method: 'DELETE',\n     headers: this.headers,\n    }) \n    .then(res => {\n     if (res.ok) {\n     return res.json();\n     }\n     // если ошибка, отклоняем промис\n     return Promise.reject(`Ошибка: ${res.status}`);\n   })\n  } \n\nchangeAvatar(avatar) {\n return fetch('https://mesto.nomoreparties.co/v1/cohort-12/users/me/avatar' , {\n  method: 'PATCH',\n  headers: this.headers,\n  body: JSON.stringify({\n    avatar: avatar\n  })\n  })\n  .then(res => {\n   if (res.ok) {\n   return res.json();\n   }\n   // если ошибка, отклоняем промис\n   return Promise.reject(`Ошибка: ${res.status}`);\n })\n}\n}\n// создаем экземпляр \n const api = new Api({ \n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12/users/me', \n  headers: { \n      authorization: '8eaaf06a-2ca4-4be0-bedd-db145fddf3b1', \n      'Content-Type': 'application/json' \n   } \n}) \n\nexport default api;\n\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return(\n    <>\n      <section className={`popup popup_opacity-normal popup_type_${props.name} ${props.isOpen ? ('popup_opened') : ('')} ` } >  \n        <form className={`popup__container popup__container_${props.avatar}`} name=\"form\" id=\"form-info\" onSubmit={props.onSubmit}>  \n          <button className={'popup__close'} onClick={props.onClose} type=\"reset\"></button>  \n          <h2 className=\"popup__title\">{props.title}</h2>  \n           {props.children}\n          <button className=\"popup__button popup__button_active \" type=\"submit\" id=\"button-info\" >{props.btnTitle}</button>  \n        </form>  \n      </section>  \n    </>\n  )\n}\n  \nexport default PopupWithForm;\n\n    \n","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup(props) {\n\n  const currentUser = React.useContext(CurrentUserContext);\n\n  // const [value, setValue] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleAboutChange(e) {\n    setDescription(e.target.value);\n\n  }\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault();\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n        name: name,\n        about: description\n      });\n}\n\n  return (\n    <PopupWithForm name=\"info\" onSubmit={handleSubmit} isOpen={props.isOpen} onClose={props.onClose}  title=\"Редактировать профиль\" btnTitle=\"Сохранить\" children={\n        <>\n        <input type=\"text\" className=\"popup__input\" id='author' name=\"author\" id=\"popup__name\" minLength=\"2\" maxLength=\"40\" required pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" defaultValue={name} onChange={handleNameChange}/>  \n        <span className=\"popup__input-error\" id=\"popup__name-error\"></span> \n        <input type=\"text\" className=\"popup__input\" name=\"about\" id=\"popup__info\" minLength=\"2\" maxLength=\"200\" required  defaultValue={description} onChange={handleAboutChange}/> \n        <span className=\"popup__input-error\" id=\"popup__info-error\"></span>  \n        </>\n      }/>\n  );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction EditAvatarPopup(props) {\n\n  const counterRef = React.useRef(); // используем реф\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: counterRef.current.value\n    });\n  }\n\n  return(\n    <PopupWithForm name=\"avatar\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} title=\"Обновить аватар\" btnTitle=\"Сохранить\" avatar=\"avatar\" children={\n        <>\n        <input type=\"url\" className=\"popup__input\" name=\"avatar\" id=\"avatar__url\" ref={counterRef} required /> \n        <span className =\"popup__input-error\" id=\"avatar__url-error\"> </span> \n        </>\n      }/>\n  );\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction AddPlacePopup(props) {\n\n  const title = React.useRef(); // используем реф\n  const url = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault(); \n    props.onAddPlace({\n        name: title.current.value,\n        link: url.current.value\n    });\n  }\n  return(\n    <PopupWithForm name=\"locations\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} title=\"Новое место\" btnTitle=\"Создать\" children={\n        <>\n       <input type=\"text\" className=\"popup__input\" name=\"name\" placeholder=\"Название\" id=\"cards__name\" minLength=\"1\" maxLength=\"30\" ref={title} required  />  \n       <span className=\"popup__input-error\" id=\"cards__name-error\"></span> \n       <input type=\"url\" className=\"popup__input\" name=\"link\" placeholder=\"Ссылка на картинку\" id=\"cards__info\" ref={url} required /> \n       <span className=\"popup__input-error\" id=\"cards__info-error\"></span>  \n        </>\n      }/>\n  );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm.js';\n\nfunction DeletePopup(props) {\n\n  function handleDelete(e) {\n    e.preventDefault();\n    props.onSubmit();\n  }\n\n  return(\n    <PopupWithForm name=\"trash\" isOpen={props.isOpen} onClose={props.onClose} \n    title=\"Вы уверены?\" avatar=\"delete\" btnTitle=\"Да\" onSubmit={handleDelete}/>\n  );\n}\n\nexport default DeletePopup;","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport ImagePopup from './ImagePopup.js';\nimport api from '../utils/API.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport DeletePopup from './DeletePopup.js';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeletePopupOpen, setDeletePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [bigPopup, setBigPopup] = React.useState([]);\n  \n  const [currentUser, setCurrentUser] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [deleteCard, setDeleteCard] = React.useState([])\n\n  // открываем увеличенную карточку\n  function handleCardClick(props) {\n    setSelectedCard(true);\n    setBigPopup(props);\n  }\n  // открываем попап редактирования информации\n  function handleEditProfile() {\n    setEditProfilePopupOpen(true);\n  }\n  // открываем попап добавления нового места\n  function handleAddPlace() {\n    setAddPlacePopupOpen(true);\n  }\n  // попап редактирования аватарки\n  function handleEditAvatar() {\n    setEditAvatarPopupOpen(true);\n  }\n  // удаления карточки\n  function handleDelete(card) {\n    setDeleteCard(card)\n    setDeletePopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setSelectedCard(false);\n    setDeletePopupOpen(false)\n  }\n\n    // получаем информацию о пользователе\n  React.useEffect(() => {\n    api.getInfo().then(res => {\n      setCurrentUser(res)\n      })\n      .catch(err => { \n        console.log(err)  \n      }) \n    }, [])\n    \n    // добавляем новую карточку\n  function handleAddPlaceSubmit({name, link}) {\n    api.addNewCard(name, link)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        })\n      closeAllPopups();\n    }\n  // получаем карточки от сервера\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data); \n    })\n    .catch(err => { \n      console.log(err)  \n    }) \n  }, []);\n    \n    // функция для лайков и дизлайков карточки\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n     api.changeLikeCardStatus(`${card._id}`, isLiked)\n      .then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    });\n  } \n    // функция для удаления карточки\n  function handleCardDeleteSubmit() {\n    api.deleteCard(deleteCard._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== deleteCard._id);\n        setCards(newCards);\n        closeAllPopups();\n      });\n    }\n  // изменяем информацию о пользователи \n  function handleUpdateUser({name, about}) {\n    api.editProfile(name, about) \n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n    }\n  // изменяем аватар\n  function handleUpdateAvatar({avatar}) {\n    api.changeAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n  }\n\n  return (\n\n    <div className=\"App\">\n      <div className=\"page\">    \n\n      <CurrentUserContext.Provider value={currentUser} > \n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n        \n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\n        \n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n   \n        <DeletePopup isOpen={isDeletePopupOpen} onClose={closeAllPopups} onSubmit={handleCardDeleteSubmit}  />\n\n        <ImagePopup card={bigPopup} isOpen={selectedCard} onClose={closeAllPopups}/>\n\n        <Header/>\n\n        <section className=\"elements\">  \n        \n        </section>  \n\n        <Main onEditAvatar={handleEditAvatar} cards={cards} cardLike={handleCardLike} onEditProfile={handleEditProfile} onAddPlace={handleAddPlace} onDeleteButton={handleDelete} onCardClick={handleCardClick} />\n        \n        <Footer />\n\n      </CurrentUserContext.Provider>\n      \n      </div>  \n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";"],"sourceRoot":""}